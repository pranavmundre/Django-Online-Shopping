# Generated by Django 3.0.5 on 2020-04-29 17:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sale_start_date', models.DateTimeField(blank=True, null=True)),
                ('sale_end_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(unique=True)),
                ('short_description', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('featured_image', models.ImageField(blank=True, default='product_image/default_product_image.png', null=True, upload_to='product_image/%Y/%m/%d')),
                ('product_type', models.CharField(choices=[('simple_product', 'Simple Product'), ('variable_product', 'Variable Product')], max_length=18)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_publish', models.BooleanField(default=True)),
                ('category', models.ManyToManyField(blank=True, related_name='category', to='product.Category')),
                ('price', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price', to='product.Price')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ShippingClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=25, validators=[django.core.validators.MinValueValidator(0)])),
                ('length', models.DecimalField(decimal_places=2, max_digits=25, validators=[django.core.validators.MinValueValidator(0)])),
                ('width', models.DecimalField(decimal_places=2, max_digits=25, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.DecimalField(decimal_places=2, max_digits=25, validators=[django.core.validators.MinValueValidator(0)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='single_product', to='product.Product')),
                ('shipping_class', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_class_data', to='product.ShippingClass')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='product_image/%Y/%m/%d')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='shipping',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Shipping_data', to='product.Shipping'),
        ),
        migrations.CreateModel(
            name='LinkedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cross_sell', models.ManyToManyField(related_name='cross_sell', to='product.Product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('up_sell', models.ManyToManyField(related_name='up_sell', to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('manage_stock', models.BooleanField(default=False)),
                ('stock_quantity', models.IntegerField(blank=True, null=True)),
                ('allow_backorders', models.CharField(choices=[('do_not_allow', 'Do not allow'), ('allow_but_notify', 'Allow, but notify customer'), ('allow', 'Allow')], help_text='If managing stock, this controls whether or not backorders are allowed. If enabled, stock quantity can go below 0.', max_length=20)),
                ('stock_status', models.CharField(choices=[('in_stock', 'In stock'), ('out_of_stock', 'Out of stock'), ('on_backorder', 'On backorder')], max_length=20)),
                ('sold_individually', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_data', to='product.Product'),
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible_on_product_page', models.BooleanField(default=False)),
                ('used_for_variation', models.BooleanField(default=False)),
                ('attribute_name', models.CharField(max_length=155, unique=True)),
                ('attribute_value', models.CharField(default=2, max_length=155)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=155)),
                ('description', models.TextField(blank=True, null=True)),
                ('inventory', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Inventory_data', to='product.Inventory')),
                ('price', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price_data', to='product.Price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('shipping', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_data', to='product.Shipping')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Attribute')),
            ],
            options={
                'unique_together': {('product', 'type', 'value')},
            },
        ),
    ]
